#!/bin/bash


cat > /tmp/crashdebug.sh <<'EOF'
#!/bin/bash

cd /tmp
renice -20 -p $$; 

LOGDIR="/var/log/crashdebug/"
mkdir -p $LOGDIR
echo "$$" > $LOGDIR/pidfile

while true;
do 
   LOGFILE="$LOGDIR/crashdebug-`date "+%Y-%m-%d_%H"`.log"
   ( 
   echo "=======> `date "+%Y-%m-%d_%H-%M-%S"`"; 
   echo '==> Processlist'
   top -b -n 1
   echo '==> Processes in SWAP'
   find /proc -maxdepth 2 -path "/proc/[0-9]*/status" -readable -exec awk -v FS=":" '{process[$1]=$2;sub(/^[ \t]+/,"",process[$1]);} END {if(process["VmSwap"] && process["VmSwap"] != "0 kB") printf "%10s %-30s %20s\n",process["Pid"],process["Name"],process["VmSwap"]}' '{}' \;
   echo '==> vmstat 10 2'
   vmstat 10 2
   echo '==> iostat -t -p ALL 10 2'
   iostat -t -p ALL 10 2
   echo '==> ps fauxwwww'
   ps fauxwwww
   echo '==> nfsstat -o all'
   nfsstat -o all
   echo '==> Processes with lots of threads'
   ps -T -ef |awk '{print $2}'|sort|uniq -c|sort -rn|head -20
   echo '==> Processes with lots of file descriptors'
   for pid in $(ps -o pid -e); do 
      echo "$(find /proc/$pid/fd -type l 2>/dev/null|wc -l) $pid"; 
   done|sort -nr|head -10|while read NUM HPID; do 
      echo "** DESCRIPTORS OF PID $HPID / $NUM";
      lsof -Pp $HPID; 
   done

   if (pgrep -u "postgres" 2>&1 >/dev/null);then
       echo '==> POSTGRESQL'
       sudo -u postgres psql --command "SELECT pid ,datname ,usename ,application_name ,client_hostname ,client_port ,backend_start ,query_start ,query FROM pg_stat_activity WHERE state <> 'idle' AND pid<>pg_backend_pid();"
   fi

   if (pgrep -u "postgres" 2>&1 >/dev/null);then
       echo '==> MYSQL'
       mysql -e "SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST where Info is not null;"
   fi
   ) 2>&1 |tee -a $LOGFILE

   (
      echo "=======> maintain logs"
      LOCK_FILE="$LOGDIR/log-maintain.lock"
      if ( ! ( set -C; : > $LOCK_FILE 2> /dev/null ) );then
        echo "Already running"
        exit 1
      fi
      trap "rm -f $LOCK_FILE; echo removed $LOCK_FILE" EXIT TERM INT
      ionice -c3 nice -n 20 find $LOGDIR -maxdepth 1 -mmin +59 -name "crashdebug-*.log" -exec gzip {} \;
      ionice -c3 nice -n 20 find $LOGDIR -maxdepth 1 -mtime +3 -name "crashdebug-*.log" -delete
   ) &
   sleep 120;
done
EOF

chmod +x /tmp/crashdebug.sh

if [ -z "$STY" ]; then 
   screen -X -S crashdebug kill
   screen -dm -S crashdebug /bin/bash "/tmp/crashdebug.sh"; 
   sleep 1
   screen -ls crashdebug
   exit $?
fi
